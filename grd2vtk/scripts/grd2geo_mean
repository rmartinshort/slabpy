#!/bin/bash
#
# determine equal area mean of data on a geographic grid
#
#
# usage:
#
# grd2geo_mean file.grd [mode, 1] [w_grid, ""]
#
#
#
#
# $Id: grd2geo_mean,v 1.1 2002-10-21 16:48:10-07 tbecker Exp $
#

GMT=gmt4

pname=`basename $0`
if [ $# -lt 1 ];then
    echo $pname: usage: $pname file.grd \[mode\] \[w_grid\] > "/dev/stderr"
    echo $pname: where the average of file.grd will be computed > "/dev/stderr"
    echo $pname: using equal area qeighting with operational > "/dev/stderr"
    echo $pname: mode \"mode\" and possible further weighting > "/dev/stderr"
    echo $pname: with w_grid
    exit
fi
#
#
wdir=/tmp/$$.$USER.geomean
mkdir -p $wdir 2> /dev/null
trap "rm -rf $wdir/; exit" 0 1 2  15
cwd=`pwd`
#
#
# check if first grid file exists
#
#
if [ -s $1 ];then
    name=$1
else
    if [ -s $1.grd ];then
	name=$1.grd
    else
	echo `basename $0`: $1 or $1.grd are nonexistent > "/dev/stderr"
	exit
    fi
fi
#
# copy input grid to temporary file
#
cp $name $wdir/tmp.i.grd
if [ $# -ge 3 ];then
    #
    # second grid for weights
    #
    wname=$3
    if [ ! -s $wname ];then
	wname=$3.grd
	if [ ! -s $wname ];then
	    echo $pname: error $3 or $3.grd non-existent > "/dev/stderr"
	    exit
	fi
    fi
    # copy over
    cp $wname $wdir/tmp.w.grd
fi
#
# select mode
#
# 1: GMT, 2: geomean program, 3: gawk script
#
# recommended: 1 or 3, 2 can't deal with NANs
#
mode=${2-1}
#
#
cd $wdir
if [ $# -ge 3 ];then
    #
    # check if all entries are >= 0
    #
    $GMT grdmath tmp.w.grd 0 LT = tmp.test;
    if [ `grd2sum tmp.test | gawk '{if($1>0)print(1);else print(0)}'` -eq 1 ];then
	echo $pname: error: second grid for weighting has negative entries > "/dev/stderr"
	exit
    fi
    wgrid=1
else
    wgrid=0
fi
if [[ $wgrid -eq 1 && $mode -ne 1 ]];then
    echo $pname: error: second grid weight only implemented for GMT mode > "/dev/stderr"
    exit
fi

if [ $mode -eq 1 ];then
 
#    echo okg0
    # obtain weighting function
#    echo ok 1
    $GMT grdmath `grd2range tmp.i.grd` `grd2inc tmp.i.grd` `grd2ispixel tmp.i.grd` Y = tmp.lat.grd
#    grdinfo -C tmp.lat.grd
#    grdinfo -C tmp.i.grd
#    echo $wgrid
    # this in here since else directories woth name 1/ would confuse grdmath
#    grdinfo tmp.lat.grd
#    grdinfo tmp.i.grd
#    exit
#    echo ok 2
    if [ $wgrid -eq 0 ];then
    # multiply with modified original grid to correct for NaN entries
    # and get area weights
	$GMT grdmath tmp.i.grd ISNAN 1 SUB ABS 0 NAN \
	    tmp.lat.grd COSD MUL  = tmp.costheta.grd
#	grdinfo -C tmp.costheta.grd
#	echo okg

    else
	# same, but also multiply with second weighting grid
	$GMT grdmath tmp.i.grd ISNAN 1 SUB ABS 0 NAN \
	    tmp.w.grd MUL \
	    tmp.lat.grd COSD MUL = tmp.costheta.grd
    fi
    #echo ok
    sumw=`grd2sum tmp.costheta.grd`
    #echo okg2
#    grdinfo -C tmp.i.grd
    $GMT grdmath tmp.costheta.grd tmp.i.grd MUL = tmp.scaled.grd
    #echo ok
    sumwx=`grd2sum tmp.scaled.grd`
#    echo `echo $sumwx $sumw | gawk '{printf("%16.8f",$1/$2)}'`
    echo `echo $sumwx $sumw | gawk '{printf("%20.15e",$1/$2)}'`
elif [ $mode -eq 2 ];then
    $GMT gmtset D_FORMAT %20.15e
    if [ -x geomean ];then
	$GMT grd2xyz tmp.i.grd | geomean | gawk '{printf("%16.8f\n",$1)}'
    else
	$GMT grd2xyz tmp.i.grd | gawk -f geomean.awk |  gawk '{printf("%16.8f\n",$1)}'
    fi
    $GMT gmtset D_FORMAT %lg
else
    $GMT gmtset D_FORMAT %20.15e
    $GMT grd2xyz tmp.i.grd | gawk -f geomean.awk |  gawk '{printf("%16.8f\n",$1)}'
    $GMT gmtset D_FORMAT %lg
fi

cd $pwd





